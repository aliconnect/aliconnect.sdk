html, body {
	font-family: Calibri;
	height: 100%;
}
ul {
	list-style: none;
	padding-left: 25px;
}
.ind > li {
	display: inline-block;
}
li > div[open="0"] + ul {
	display: none;
}
ul > :not(:last-child) > i.ln {
	display: inline-block;
	position: absolute;
	height: 100%;
}
li:before {
  z-index: -1;
  content: "";
  display: inline-block;
  position: absolute;
  top: -15px;
  left:-10px;
  height: 30px;
  width: 10px;
  border-left: dotted 1px green;
  border-bottom: dotted 1px green;
}
li:not(:last-child)>ul:before {
  z-index: -1;
  content: "";
  display: inline-block;
  position: absolute;
  top: -15px;
  left: -10px;
  width: 10px;
  border-left: dotted 1px green;
  height: 100%;
}
#folders li[selected]::after {
  content: "";
  position: absolute;
  display: block;
  height: 30px;
  width: 200%;
  top: 0;
  z-index: -2;
  left: -100%;
  background-color: lightblue;
}
i.open {
	display: inline-block;
	position: absolute;
	left: -15px;
	top: 10px;
	width: 10px;
	height: 10px;
	border: solid 1px gray;
	background: white;
	z-index: 10;
}
li:not([open="1"])>ul {
	display: none;
}
#folders li>div {
	line-height: 30px;
	display: block;
}
#folders li>div>span, li>div>a {
	font-size: 20pt;
	display: inline-block;
	vertical-align: middle;
	cursor: pointer;
}
.symbol::before {
	content: "";
	display: inline-block;
	width: 30px;
	height: 30px;
	line-height:30px;
	text-align:center;
	font-size:12pt;
	border-radius: 30px;
	vertical-align: middle;
	margin-right: 10px;
	/* background-color: #fafafa; */
	/* Green by default */
	background-color: rgba(88,186,74,1);
	/*border: solid 1px #ccc;*/
	/* background-color: rgba(88,186,74,1); */
	background-image: radial-gradient(circle, rgb(255,255,255,.3), transparent, rgba(0,0,0,0.5));
}
table .symbol::before {
	width: 10px;
	height: 10px;
}
table>thead>tr>th[name]{
  text-align: left;
  font: inherit;
  cursor: pointer;
}
table>thead>tr>th[sort]:after{
  content: ">";
  transform: rotate(-90deg);
  display: inline-block;
  /* position: absolute; */
  /* right:0; */
}
table>thead>tr>th[sort='0']:after{
  transform: rotate(90deg);
}
.symbol[MeasurementErrorFlag]::before,
.symbol[PreWarning]::before{
	background-color: rgba(255,255,0,1);
	content: attr(nrWarning);
}
.symbol[Locking]::before,
.symbol[Maintenance]::before,
.symbol[Security]::before,
.symbol[NonCriticalFailure]::before{
	background-color: rgb(255,175,0);
	content: attr(nrNoFailure);
}
.symbol[failure]::before,
.symbol[CriticalFailure]::before {
	background-color: rgb(255,0,0);
	content: attr(nrFailure);
}
.symbol[nok]:not([nok="0"])::before {
	/* background-color: rgba(255,255,255,0.1); */
	opacity: 0.5;
}
.symbol.Value[value="0"] {
	visibility: hidden;
}
nav.row.head {
	background: linear-gradient(to right, #e6234b, #f07d00);
	padding: 10px;
}
#index {
	background-color: white;
	padding: 10px;
}
div.row.top {
	background-color: rgba(180,180,180,0.1);
}
#folders {
	max-width: 400px;
	overflow: auto;
}
#folders div {
	white-space: nowrap;
}
table {
	border-collapse: collapse;
	font-size: 13pt;
}
tr {
}
td {
	padding: 3px;
}
thead tr {
	background-color: rgba(180,180,180,0.2);
}
#list tr.alarm[value="1"] {
	color: red;
}
#list tr[hasControlObjectSelected="0"] {
	opacity: 0.5;
}
#list tr[hasControlObject="false"] {
	opacity: 0.5;
}
.row.top button:not([checked]) {
	opacity: 0.6;
}
.popupform {
	font-size: 200%;
	position: fixed;
	margin: auto;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	width: 800px;
	height: 300px;
	background: #ccc;
	border: solid 1px gray;
	padding: 10px;
}
.popupform button,
.popupform input {
	font-size: inherit;
}
li > div[nok]:not([nok="0"])::after {
  /* content: calc( attr(connecting) + attr(disconnect) + attr(error_read) + attr(error) ); */
  /* content: calc( attr(connecting)  ); */
  content: attr(nok);
	position: absolute;
	display: inline-block;
	border-radius: 50px;
  border: solid 1px white;
	width: 16px;
	height: 16px;
	line-height: 16px;
	text-align: center;
	opacity: 1;
	font-size: 12px;
	left: 15px;
	bottom: 0;
	color: white;
	background-color: purple;
}
/* li > div[connecting]:after {
	background-color: rgba(255, 128, 0, 1);
}
li > div[disconnect]:after {
	background-color: rgba(255, 128, 0, 1);
}
li > div[error_read]:after {
	background-color: rgba(255, 0, 0, 1);
}
li > div[error]:after {
	background-color: rgba(255, 0, 0, 1);
} */

tr[state="connecting"] {
	opacity: 0.8;
	color: purple;
}
tr[state="connected"] {
	/* color: green; */
}
tr[state="error_read"] {
	opacity: 0.6;
	color: purple;
}
tr[state="error"] {
	opacity: 0.4;
	color: purple;
}
tr[state="disconnect"] {
	opacity: 0.4;
	color: purple;
}
#index li{margin-right:20px;}
tr[disabled] {
	opacity:0.5;
	color:gray !important;
}
.statusbar:not(:empty) {
	position: fixed;
	line-height: 22px;
	bottom: 0;
	left: 0;
	z-index: 100;
	max-width: 60%;
	overflow: hidden;
	text-overflow: ellipsis;
	background: #fafafa;
	color: #666;
	border-top: solid 1px #ccc;
	border-right: solid 1px #ccc;
	font-size: 9pt;
	border-top-right-radius: 5px;
	min-width: 400px;
	padding: 0 3px;
}
td{white-space: nowrap;}

tbody>tr[state="disconnected"] {
	opacity: 0.4;
	color: purple;
}

tr[type="alarm"][value="1"] {
	opacity: 0.4;
	color: purple;
  background:red;
}
form.row {

}
form.row input+label {
  background-color: #fafafa;
  padding:0 10px;
  margin:0;
}
form.row input+label:hover {
  background-color: #eee;
}
form.row input:checked+label {
  background-color: #ccc;
}
form.row input[type="radio"], form.row input[type="checkbox"] {
  display: none;
}
form.row label::after{
  content: attr(for);
}
div.logo{
  height:30px;
  /* background:url('../../dist/img/dynniq.png') no-repeat; */
}
.logo2{
  width:200px;
  text-align:center;
  height:50px;
  background:url('img/plane.png') no-repeat center;
}
